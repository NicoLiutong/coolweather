https://guides.github.com/activities/hello-world/
https://help.github.com/articles/syncing-a-fork/
https://www.zhihu.com/question/20070065
https://developer.android.com/reference/classes.html
checkbox自定義圖片：http://blog.csdn.net/bear_huangzhen/article/details/47044733
修改光標顏色：http://blog.csdn.net/drevy/article/details/7302345
自定義button樣式：http://blog.csdn.net/jack__frost/article/details/51959544；http://www.cnblogs.com/cyanfei/archive/2012/07/27/2612023.html
edittext顯示和隱藏密碼：http://blog.csdn.net/luck_apple/article/details/7075111
assets图片保存到本地sdcard：http://blog.csdn.net/zhang_yanye/article/details/48399593
圖片加載：http://blog.csdn.net/lmj623565791/article/details/39943731/
退出程序：http://blog.csdn.net/u012210186/article/details/41681031
選擇加載、拍照、裁剪並保存：http://blog.csdn.net/xuehuayous/article/details/51324656
uCorp：http://blog.csdn.net/copy_yuan/article/details/51727070；http://blog.csdn.net/u011771755/article/details/50676888；https://my.oschina.net/u/1399599/blog/853374
拍照或相冊選擇：http://www.2cto.com/kf/201610/552599.html
android中自定義view的自定義屬性：http://blog.csdn.net/xmxkf/article/details/51468648
editview獲取焦點：http://www.cnblogs.com/colorful-life/p/4617253.html
editview取消焦點：http://blog.csdn.net/subaohao/article/details/9043895
裁剪图片：https://github.com/oginotihiro/cropview
android7.0調用相機：http://blog.csdn.net/u010873775/article/details/72811581；http://mt.sohu.com/it/d20170425/136282885_659256.shtml；
                    http://blog.csdn.net/u010212089/article/details/53538680；http://blog.csdn.net/u010356768/article/details/70808162
android7.0動態權限：http://blog.csdn.net/u011216417/article/details/69916964：http://blog.csdn.net/lylodyf/article/details/53158091
优雅地实现多个样式的recycler：http://zpayh.xyz/
NavigationView使用：http://blog.csdn.net/u012702547/article/details/51253222
洪洋通用ListView的Adapter和ViewHolder封裝：http://blog.csdn.net/lmj623565791/article/details/38902805/
洪洋通用RecyclerView的Adapter和ViewHolder封裝：http://blog.csdn.net/lmj623565791/article/details/51118836/
RecyclerView實現分組：http://blog.csdn.net/nothingl3/article/details/49049721
RecyclerView長按多選：http://blog.csdn.net/Loften_93663469/article/details/51376703
AndroidStudio使用:http://www.open-open.com/lib/view/open1468121363300.html;http://www.open-open.com/lib/view/open1468121618489.html;
RecyclerVtew滑动监听：http://blog.csdn.net/wyb112233/article/details/50429077
recyclerView下拉刷新、上划加载：https://github.com/llxdaxia/RecyclerView






package com.example.bianqian.fragment;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;

import com.example.bianqian.R;
import com.example.bianqian.adapter.MultiItemTypeSupport;
import com.example.bianqian.adapter.MyAdapter;
import com.example.bianqian.adapter.MyViewHolder;
import com.example.bianqian.db.UserNote;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by 刘通 on 2017/6/15.
 */

public class MoodNote extends Fragment {

    public static final int TITLE = 1;
    public static final int NOTEITEM = 2;

    private RecyclerView mainRecyclerView;

    private Button cancleButton,deletButton;

    private LinearLayout cancleDeletLayout;

    private List<UserNote> data;

    private MyAdapter<UserNote> adapter;

    private MultiItemTypeSupport<UserNote> multiItemTypeSupport;

    private Integer date;

    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        final View view = inflater.inflate(R.layout.main_activity_recycler,container,false);
        mainRecyclerView = (RecyclerView) view.findViewById(R.id.main_recyclerview);
        cancleDeletLayout = (LinearLayout) view.findViewById(R.id.cancle_delet_layout);
        cancleDeletLayout.setVisibility(View.GONE);
        cancleButton = (Button) view.findViewById(R.id.cancle_button);
        deletButton = (Button) view.findViewById(R.id.delet_button);

        LinearLayoutManager layoutManager = new LinearLayoutManager(getContext());
        layoutManager.setOrientation(LinearLayoutManager.VERTICAL);
        multiItemTypeSupport = new MultiItemTypeSupport<UserNote>() {
            @Override
            public int getLayoutId(int itenType) {
                if(itenType == TITLE){
                    return R.layout.date_item;
                }else {
                    return R.layout.item_note;
                }
            }

            @Override
            public int getItemViewType(int position, UserNote userNote) {
                //判斷title
				if(userNote.getObjectId().equals("1")){
                    return TITLE;
                }else {
                    return NOTEITEM;
                }
            }
        };


        intialize();
        adapter = new MyAdapter<UserNote>(getContext(),data,multiItemTypeSupport) {
            @Override
            public void convert(final MyViewHolder holder, int viewType, UserNote userNote, boolean isClickLong) {
                if(viewType == TITLE){
                    holder.setText(R.id.item_date_title,userNote.getNote());
                    holder.setInvisiblity(R.id.note_top_line);
					intializeRecycler(holder,viewType,userNote,isClickLong);
					
                }else {
                    intializeRecycler(holder,viewType,userNote,isClickLong);
					
                }
            }
        };

        mainRecyclerView.setLayoutManager(layoutManager);
        mainRecyclerView.setAdapter(adapter);
        return view;
    }

    private List<UserNote> intialize(){
        data = new ArrayList<>();
        UserNote user1 = new UserNote();
        user1.setMoodColor("red");
        user1.setNote("我爱你");
        user1.setObjectId("1");
        data.add(user1);
        UserNote user2 = new UserNote();
        user2.setMoodColor("green");
        user2.setNote("mamapi");
        user2.setObjectId("2");
        data.add(user2);
        UserNote user3 = new UserNote();
        user3.setMoodColor("blue");
        user3.setNote("mamapi");
        user3.setObjectId("3");
        data.add(user3);
        return data;
    }
	
	public void intializeRecycler(MyViewHolder holder, int viewType, UserNote userNote, boolean isClickLong){
			int circleColor,backgroundColor,textColor;
			switch(userNote){
				case red : circleColor = R.drawable.red_circle;
						   backgroundColor = R.color.text_background_red;
						   textColor = R.color.text_red;
				break;
				
				case green : circleColor = R.drawable.green_circle;
						   backgroundColor = R.color.text_background_green;
						   textColor = R.color.text_green;
				break;
				
				case blue : circleColor = R.drawable.blue_circle;
						   backgroundColor = R.color.text_background_blue;
						   textColor = R.color.text_blue;
				break;
				
				case pink : circleColor = R.drawable.pink_circle;
						   backgroundColor = R.color.text_background_pink;
						   textColor = R.color.text_pink;
				break;
				
				case purple : circleColor = R.drawable.purple_circle;
						   backgroundColor = R.color.text_background_purple;
						   textColor = R.color.text_purple;
				break;
				
				case yellow : circleColor = R.drawable.yellow_circle;
						   backgroundColor = R.color.text_background_yellow;
						   textColor = R.color.text_yellow;
				break;
			
				case gray : circleColor = R.drawable.gray_circle;
						   backgroundColor = R.color.text_background_gray;
						   textColor = R.color.text_gray;
				break;
			}
			holder.setCircleColor(R.id.note_circle,circleColor);
            holder.setBackGround(R.id.note_card_color,backgroundColor);
            holder.setTextColor(R.id.note_text,textColor);
			holder.setText(R.id.note_text,userNote.getNote());
			if(isClickLong){
				holder.setOnClickListener(R.id.note_card_color,new View.OnClickListener(){
					@Override
					public void onClick(View v){
					//傳入數據，進入編輯頁面
				
				
					}
				}
			}else {
				holder.setOnLongClickListener(R.id.note_card_color, new View.OnLongClickListener() {
                @Override
                public boolean onLongClick(View v) {
					adapter.setClickLong(true);
                    holder.setVisiblity(R.id.note_checkbox);
					cancleDeletLayout.setVisibility(View.VISIBILITY);
                    holder.setChecked(R.id.note_checkbox,adapter.isSelectItems(holder.getAdapterPosition()));
                    return true;
                }
            });
			}
			
			//checkbox的點擊事件

            
		}
}
