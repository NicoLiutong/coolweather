https://guides.github.com/activities/hello-world/
https://help.github.com/articles/syncing-a-fork/
https://www.zhihu.com/question/20070065
https://developer.android.com/reference/classes.html
checkbox自定義圖片：http://blog.csdn.net/bear_huangzhen/article/details/47044733
修改光標顏色：http://blog.csdn.net/drevy/article/details/7302345
自定義button樣式：http://blog.csdn.net/jack__frost/article/details/51959544；http://www.cnblogs.com/cyanfei/archive/2012/07/27/2612023.html
edittext顯示和隱藏密碼：http://blog.csdn.net/luck_apple/article/details/7075111
assets图片保存到本地sdcard：http://blog.csdn.net/zhang_yanye/article/details/48399593
圖片加載：http://blog.csdn.net/lmj623565791/article/details/39943731/
退出程序：http://blog.csdn.net/u012210186/article/details/41681031
選擇加載、拍照、裁剪並保存：http://blog.csdn.net/xuehuayous/article/details/51324656
uCorp：http://blog.csdn.net/copy_yuan/article/details/51727070；http://blog.csdn.net/u011771755/article/details/50676888；https://my.oschina.net/u/1399599/blog/853374
拍照或相冊選擇：http://www.2cto.com/kf/201610/552599.html
android中自定義view的自定義屬性：http://blog.csdn.net/xmxkf/article/details/51468648
editview獲取焦點：http://www.cnblogs.com/colorful-life/p/4617253.html
editview取消焦點：http://blog.csdn.net/subaohao/article/details/9043895
紡微信裁剪圖片：http://blog.csdn.net/mywebstudy/article/details/7814695




void createExternalStoragePrivateFile() {
    // Create a path where we will place our private file on external
    // storage.
    File file = new File(getExternalFilesDir(null), "DemoFile.jpg");

    try {
        // Very simple code to copy a picture from the application's
        // resource into the external file.  Note that this code does
        // no error checking, and assumes the picture is small (does not
        // try to copy it in chunks).  Note that if external storage is
        // not currently mounted this will silently fail.
        InputStream is = getResources().openRawResource(R.drawable.balloons);
        OutputStream os = new FileOutputStream(file);
        byte[] data = new byte[is.available()];
        is.read(data);
        os.write(data);
        is.close();
        os.close();
    } catch (IOException e) {
        // Unable to create file, likely because external storage is
        // not currently mounted.
        Log.w("ExternalStorage", "Error writing " + file, e);
    }
}

void deleteExternalStoragePrivateFile() {
    // Get path for the file on external storage.  If external
    // storage is not currently mounted this will fail.
    File file = new File(getExternalFilesDir(null), "DemoFile.jpg");
    if (file != null) {
        file.delete();
    }
}

boolean hasExternalStoragePrivateFile() {
    // Get path for the file on external storage.  If external
    // storage is not currently mounted this will fail.
    File file = new File(getExternalFilesDir(null), "DemoFile.jpg");
    if (file != null) {
        return file.exists();
    }
    return false;
}
